{"version":3,"sources":["../../src/pages/home-product-news-list/home-product-news-list.module.ts","../../src/components/components.module.ts","../../src/components/app-header/app-header.ts","../../src/components/app-footer/app-footer.ts","../../src/pages/home-product-news-list/home-product-news-list.ts","../../node_modules/ngx-pagination/dist/ngx-pagination.js"],"names":[],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uDAAuD,0BAA0B,EAAE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4DAA4D,8CAA8C,EAAE;AAC5G;AACA;AACA,QAAQ,2DAAI;AACZ;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA,g1BAAg1B,iBAAiB,+BAA+B,yBAAyB,2FAA2F,iBAAiB,+BAA+B,yBAAyB,mGAAmG,kBAAkB,KAAK,mBAAmB,6XAA6X,yBAAyB,kCAAkC,kEAAkE,6IAA6I,4BAA4B,kCAAkC,kEAAkE,wVAAwV,aAAa,+BAA+B,yBAAyB,2FAA2F,aAAa,+BAA+B,yBAAyB;AAC9gF,yCAAyC,mBAAmB,wBAAwB,EAAE,qDAAqD,mBAAmB,qBAAqB,EAAE,4BAA4B,kBAAkB,EAAE,wBAAwB,6BAA6B,gCAAgC,4BAA4B,8BAA8B,uBAAuB,EAAE,wBAAwB,4BAA4B,EAAE,kDAAkD,qBAAqB,sBAAsB,kCAAkC,uBAAuB,EAAE,kEAAkE,4BAA4B,EAAE,8BAA8B,kCAAkC,0BAA0B,qBAAqB,sBAAsB,EAAE,+BAA+B,kCAAkC,qBAAqB,sBAAsB,EAAE,wCAAwC,gCAAgC,EAAE,+CAA+C,sBAAsB,EAAE,4GAA4G,uBAAuB,0BAA0B,yBAAyB,EAAE,kGAAkG,sBAAsB,0BAA0B,wBAAwB,EAAE,kCAAkC,kCAAkC,eAAe,gBAAgB,qBAAqB,2BAA2B,EAAE,iCAAiC,kBAAkB,EAAE,wCAAwC,8CAA8C,4BAA4B,EAAE,uGAAuG,oBAAoB,EAAE,GAAG;;AAEn2D;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C,wCAAwC,2DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,6DAAM;AACd,oCAAoC,2DAAY;AAChD;AACA;AACA,QAAQ,6DAAM;AACd,oCAAoC,2DAAY;AAChD;AACA;AACA,QAAQ,gEAAS;AACjB;AACA;AACA;AACA,6BAA6B,sEAAuB;AACpD,2BAA2B,gEAAiB;AAC5C,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,2DAAY;AAC1C,wCAAwC,2DAAY;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,4DAAK;AACb;AACA;AACA;AACA,QAAQ,6DAAM;AACd,oCAAoC,2DAAY;AAChD;AACA;AACA,QAAQ,6DAAM;AACd,oCAAoC,2DAAY;AAChD;AACA;AACA,QAAQ,gEAAS;AACjB;AACA;AACA,SAAS;AACT;AACA,YAAY,gEAAiB;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,4CAA4C,QAAQ;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,+DAAQ;AAChB,sBAAsB,6DAAY;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;;AAED;AACA;AACA;;AAEwK","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { HomeProductNewsListPage } from './home-product-news-list';\nimport { ComponentsModule } from '../../components/components.module';\nimport {NgxPaginationModule} from 'ngx-pagination';\n\n@NgModule({\n  declarations: [\n    HomeProductNewsListPage\n  ],\n  imports: [\n    IonicPageModule.forChild(HomeProductNewsListPage),\n    ComponentsModule,\n    NgxPaginationModule\n  ],\n})\nexport class HomeProductNewsListPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home-product-news-list/home-product-news-list.module.ts","import { NgModule } from '@angular/core';\nimport { AppHeaderComponent } from './app-header/app-header';\nimport { CommonModule} from '@angular/common';\nimport { AppFooterComponent } from './app-footer/app-footer';\nimport { IonicModule } from 'ionic-angular';\n\n@NgModule({\n\tdeclarations: [AppHeaderComponent,\n    AppFooterComponent],\n\timports: [CommonModule, IonicModule],\n\texports: [AppHeaderComponent,\n\tAppFooterComponent]\n})\nexport class ComponentsModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import { Component,  Input, Output, Renderer, EventEmitter  } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { productsFirebaseController } from '../../providers/firebase-services/productsFirebaseController';\n\n/**\n * Generated class for the AppHeaderComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: 'app-header.html'\n})\nexport class AppHeaderComponent {\n  @Input('currentSite') currentSiteCatergory: string;\n  \n  listOfProducts = []\n  listOfProductGroups = null\n  listOfProductGroupsToDisplay = []\n\n  constructor(public navCtrl:NavController, public productsFirebaseController:productsFirebaseController) {\n    console.log('Hello AppHeaderComponent Component');\n  }\n  ngOnChanges()\n  {\n    console.log(this.currentSiteCatergory)\n    this.getProductsOfCatergory()\n  }\n  menuClick(page) {\n    console.log(page)\n    if (page == 'home') {\n      if (!this.isPageActive('HomeProductHomePage')) {\n        this.navCtrl.push('HomeProductHomePage', { site: this.currentSiteCatergory })\n      }\n    }\n    else if (page.startsWith('productGroup')) {\n      if (!this.isPageActive('HomeProductDetailPage')) {\n        console.log(page.split('productGroup')[1])\n        let groupName=page.split('productGroup')[1]\n        let productsOnlyArray=[]\n        for(let product of this.listOfProducts)\n        {\n          if(product.groupName!=null && product.groupName==groupName)\n          productsOnlyArray.push(product)\n        }\n        this.navCtrl.push('HomeProductDetailPage', { site: this.currentSiteCatergory, groupName:groupName, listOfProducts:productsOnlyArray })\n      }     \n    }\n    else if (page == 'products')\n    {\n      if (!this.isPageActive('HomeProductDetailPage')) \n      this.navCtrl.push('HomeProductDetailPage', { site: this.currentSiteCatergory, listOfProducts:this.listOfProducts })\n    }\n    else if (page == 'news')\n    {\n      if (!this.isPageActive('HomeProductNewsListPage')) \n      this.navCtrl.push('HomeProductNewsListPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'process')\n    {\n      if (!this.isPageActive('HomeProductProcessPage')) \n      this.navCtrl.push('HomeProductProcessPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'aboutus')\n    {\n      if (!this.isPageActive('HomeAboutUsPage')) \n      this.navCtrl.push('HomeAboutUsPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'contact')\n    {\n      if (!this.isPageActive('HomeContactUsPage')) \n      this.navCtrl.push('HomeContactUsPage', { site: this.currentSiteCatergory})\n    }\n    return false\n  }\n  isPageActive(pageName: string): boolean {\n    return this.navCtrl.getActive().id === pageName || this.navCtrl.getActive().name === pageName;\n  }\n  getProductsOfCatergory() {\n    this.productsFirebaseController.getNewsOfCatergory(this.currentSiteCatergory, null).then(res => {\n      console.log('Data từ header')\n\n      console.log(res)\n      let result = <any>res\n      if (result.hasContent) {\n        console.log(result)\n        for (let i = result.data.length - 1; i >= 0; i--) {\n          if (result.data[i].id == 'productGroups') {\n            //Đây ko phải sản phẩm mà là nhóm sp.\n            this.listOfProductGroups = result.data[i]\n            result.data.splice(i, 1);\n          }\n        }\n        this.listOfProducts = result.data\n        this.listOfProductGroupsToDisplay = []\n        if (this.listOfProductGroups.data.length > 0) {\n          for (let group of this.listOfProductGroups.data) {\n            let parsedObj = JSON.parse(group)\n            this.listOfProductGroupsToDisplay.push({\n              id: group,\n              groupName: parsedObj.groupName,\n              groupAvatar: parsedObj.groupAvatar\n            })\n          }\n        }\n        else\n          this.listOfProductGroupsToDisplay = []\n        console.log('Danh sách products')\n        console.log(this.listOfProducts)\n        console.log('Danh sách products groups đã parse')\n        console.log(this.listOfProductGroupsToDisplay)\n        console.log('Danh sách products groups chưa parse')\n        console.log(this.listOfProductGroups)\n      }\n    })\n  }\n\n  goHome()\n  {\n    this.navCtrl.popToRoot()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app-header/app-header.ts","\nimport { contactFirebaseController } from '../../providers/firebase-services/contactFirebaseController';\nimport { Component,  Input, Output, Renderer, EventEmitter  } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n/**\n * Generated class for the AppFooterComponent component.\n *\n * See https://angular.io/api/core/Component for more info on Angular\n * Components.\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: 'app-footer.html'\n})\nexport class AppFooterComponent {  \n  @Input('currentSite') currentSiteCatergory: string;\n\n  contactDetail = null\n\n  constructor(public navCtrl:NavController, public contactFirebaseController:contactFirebaseController) {\n    console.log('Hello AppFooterComponent Component');\n  }\n  goHome()\n  {\n    this.navCtrl.popToRoot()\n  }\n  ngOnChanges()\n  {\n    console.log(this.currentSiteCatergory)\n    this.getCurrentContact()\n  }\n  menuClick(page) {\n    console.log(page)\n    if (page == 'home') {\n      if (!this.isPageActive('HomeProductHomePage')) \n      this.navCtrl.push('HomeProductHomePage', { site: this.currentSiteCatergory })\n    }\n    else if (page == 'news')\n    {\n      if (!this.isPageActive('HomeProductNewsListPage')) \n      this.navCtrl.push('HomeProductNewsListPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'process')\n    {\n      if (!this.isPageActive('HomeProductProcessPage')) \n      this.navCtrl.push('HomeProductProcessPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'aboutus')\n    {\n      if (!this.isPageActive('HomeAboutUsPage')) \n      this.navCtrl.push('HomeAboutUsPage', { site: this.currentSiteCatergory})\n    }\n    else if (page == 'contact')\n    {\n      if (!this.isPageActive('HomeContactUsPage')) \n      this.navCtrl.push('HomeContactUsPage', { site: this.currentSiteCatergory})\n    }\n    return false\n  }\n  getCurrentContact() {\n    this.contactFirebaseController.getContact().then(res => {\n      console.log(res)\n      let result = <any>res\n      if (result.hasContent) {\n        this.contactDetail = result.data\n        console.log(this.contactDetail)\n      }\n    }).catch(err => {\n    })\n  }\n  isPageActive(pageName: string): boolean {\n    return this.navCtrl.getActive().id === pageName || this.navCtrl.getActive().name === pageName;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/app-footer/app-footer.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, PopoverController } from 'ionic-angular';\nimport { newsFirebaseController } from '../../providers/firebase-services/newsFirebaseController';\nimport { GlobalheroProvider } from '../../providers/globalhero/globalhero';\n/**\n * Generated class for the HomeProductNewsListPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage({\n  name: 'HomeProductNewsListPage',\n  segment: 'home/:site/news',\n  defaultHistory: ['HomePage']\n})\n@Component({\n  selector: 'page-home-product-news-list',\n  templateUrl: 'home-product-news-list.html',\n})\nexport class HomeProductNewsListPage {\n  newsDetailDialog\n  currentNewsPiece\n  currentSiteCatergory\n  listOfNews=[]\n  currentPage: number = 1;\n  constructor(private popCtrl:PopoverController,public global:GlobalheroProvider,public newsFirebaseController:newsFirebaseController , public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad HomeProductNewsListPage');\n  }\n\n  ionViewWillEnter() {\n    console.log(this.navParams.get('site'))\n    this.currentSiteCatergory = this.navParams.get('site') \n    this.getNewsOfCatergory()\n  }\n  getNewsOfCatergory() {\n    this.newsFirebaseController.getNewsOfCatergory(this.currentSiteCatergory).then(res => {\n      console.log(res)\n      let result=<any>res\n      if(result.hasContent)\n      {\n        for(let i = result.data.length - 1; i >= 0; i--) {\n          if(result.data[i].title == null) {\n            result.data.splice(i, 1);\n          }\n      } \n      }\n      this.listOfNews = result.data\n      console.log('danh sách tin')\n      console.log(this.listOfNews)\n    })\n  }\n  readNewsDetail(news) {\n    let popover = this.popCtrl.create('NewsDetailPopoverPage',{news:news},{cssClass: 'newsDetailPopover'});\n    popover.present();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home-product-news-list/home-product-news-list.ts","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Directive, EventEmitter, Input, NgModule, Output, Pipe, ViewEncapsulation } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nvar PaginationService = /** @class */ (function () {\r\n    function PaginationService() {\r\n        this.change = new EventEmitter();\r\n        this.instances = {};\r\n        this.DEFAULT_ID = 'DEFAULT_PAGINATION_ID';\r\n    }\r\n    PaginationService.prototype.defaultId = function () { return this.DEFAULT_ID; };\r\n    /**\r\n     * Register a PaginationInstance with this service. Returns a\r\n     * boolean value signifying whether the instance is new or\r\n     * updated (true = new or updated, false = unchanged).\r\n     */\r\n    PaginationService.prototype.register = function (instance) {\r\n        if (instance.id == null) {\r\n            instance.id = this.DEFAULT_ID;\r\n        }\r\n        if (!this.instances[instance.id]) {\r\n            this.instances[instance.id] = instance;\r\n            return true;\r\n        }\r\n        else {\r\n            return this.updateInstance(instance);\r\n        }\r\n    };\r\n    /**\r\n     * Check each property of the instance and update any that have changed. Return\r\n     * true if any changes were made, else return false.\r\n     */\r\n    PaginationService.prototype.updateInstance = function (instance) {\r\n        var changed = false;\r\n        for (var prop in this.instances[instance.id]) {\r\n            if (instance[prop] !== this.instances[instance.id][prop]) {\r\n                this.instances[instance.id][prop] = instance[prop];\r\n                changed = true;\r\n            }\r\n        }\r\n        return changed;\r\n    };\r\n    /**\r\n     * Returns the current page number.\r\n     */\r\n    PaginationService.prototype.getCurrentPage = function (id) {\r\n        if (this.instances[id]) {\r\n            return this.instances[id].currentPage;\r\n        }\r\n    };\r\n    /**\r\n     * Sets the current page number.\r\n     */\r\n    PaginationService.prototype.setCurrentPage = function (id, page) {\r\n        if (this.instances[id]) {\r\n            var instance = this.instances[id];\r\n            var maxPage = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n            if (page <= maxPage && 1 <= page) {\r\n                this.instances[id].currentPage = page;\r\n                this.change.emit(id);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.totalItems\r\n     */\r\n    PaginationService.prototype.setTotalItems = function (id, totalItems) {\r\n        if (this.instances[id] && 0 <= totalItems) {\r\n            this.instances[id].totalItems = totalItems;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Sets the value of instance.itemsPerPage.\r\n     */\r\n    PaginationService.prototype.setItemsPerPage = function (id, itemsPerPage) {\r\n        if (this.instances[id]) {\r\n            this.instances[id].itemsPerPage = itemsPerPage;\r\n            this.change.emit(id);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a clone of the pagination instance object matching the id. If no\r\n     * id specified, returns the instance corresponding to the default id.\r\n     */\r\n    PaginationService.prototype.getInstance = function (id) {\r\n        if (id === void 0) { id = this.DEFAULT_ID; }\r\n        if (this.instances[id]) {\r\n            return this.clone(this.instances[id]);\r\n        }\r\n        return {};\r\n    };\r\n    /**\r\n     * Perform a shallow clone of an object.\r\n     */\r\n    PaginationService.prototype.clone = function (obj) {\r\n        var target = {};\r\n        for (var i in obj) {\r\n            if (obj.hasOwnProperty(i)) {\r\n                target[i] = obj[i];\r\n            }\r\n        }\r\n        return target;\r\n    };\r\n    return PaginationService;\r\n}());\n\nvar __decorate$1 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nvar LARGE_NUMBER = Number.MAX_SAFE_INTEGER;\r\nvar PaginatePipe = /** @class */ (function () {\r\n    function PaginatePipe(service) {\r\n        this.service = service;\r\n        // store the values from the last time the pipe was invoked\r\n        this.state = {};\r\n    }\r\n    PaginatePipe.prototype.transform = function (collection, args) {\r\n        // When an observable is passed through the AsyncPipe, it will output\r\n        // `null` until the subscription resolves. In this case, we want to\r\n        // use the cached data from the `state` object to prevent the NgFor\r\n        // from flashing empty until the real values arrive.\r\n        if (!(collection instanceof Array)) {\r\n            var _id = args.id || this.service.defaultId();\r\n            if (this.state[_id]) {\r\n                return this.state[_id].slice;\r\n            }\r\n            else {\r\n                return collection;\r\n            }\r\n        }\r\n        var serverSideMode = args.totalItems && args.totalItems !== collection.length;\r\n        var instance = this.createInstance(collection, args);\r\n        var id = instance.id;\r\n        var start, end;\r\n        var perPage = instance.itemsPerPage;\r\n        var emitChange = this.service.register(instance);\r\n        if (!serverSideMode && collection instanceof Array) {\r\n            perPage = +perPage || LARGE_NUMBER;\r\n            start = (instance.currentPage - 1) * perPage;\r\n            end = start + perPage;\r\n            var isIdentical = this.stateIsIdentical(id, collection, start, end);\r\n            if (isIdentical) {\r\n                return this.state[id].slice;\r\n            }\r\n            else {\r\n                var slice = collection.slice(start, end);\r\n                this.saveState(id, collection, slice, start, end);\r\n                this.service.change.emit(id);\r\n                return slice;\r\n            }\r\n        }\r\n        else {\r\n            if (emitChange) {\r\n                this.service.change.emit(id);\r\n            }\r\n            // save the state for server-side collection to avoid null\r\n            // flash as new data loads.\r\n            this.saveState(id, collection, collection, start, end);\r\n            return collection;\r\n        }\r\n    };\r\n    /**\r\n     * Create an PaginationInstance object, using defaults for any optional properties not supplied.\r\n     */\r\n    PaginatePipe.prototype.createInstance = function (collection, config) {\r\n        this.checkConfig(config);\r\n        return {\r\n            id: config.id != null ? config.id : this.service.defaultId(),\r\n            itemsPerPage: +config.itemsPerPage || 0,\r\n            currentPage: +config.currentPage || 1,\r\n            totalItems: +config.totalItems || collection.length\r\n        };\r\n    };\r\n    /**\r\n     * Ensure the argument passed to the filter contains the required properties.\r\n     */\r\n    PaginatePipe.prototype.checkConfig = function (config) {\r\n        var required = ['itemsPerPage', 'currentPage'];\r\n        var missing = required.filter(function (prop) { return !(prop in config); });\r\n        if (0 < missing.length) {\r\n            throw new Error(\"PaginatePipe: Argument is missing the following required properties: \" + missing.join(', '));\r\n        }\r\n    };\r\n    /**\r\n     * To avoid returning a brand new array each time the pipe is run, we store the state of the sliced\r\n     * array for a given id. This means that the next time the pipe is run on this collection & id, we just\r\n     * need to check that the collection, start and end points are all identical, and if so, return the\r\n     * last sliced array.\r\n     */\r\n    PaginatePipe.prototype.saveState = function (id, collection, slice, start, end) {\r\n        this.state[id] = {\r\n            collection: collection,\r\n            size: collection.length,\r\n            slice: slice,\r\n            start: start,\r\n            end: end\r\n        };\r\n    };\r\n    /**\r\n     * For a given id, returns true if the collection, size, start and end values are identical.\r\n     */\r\n    PaginatePipe.prototype.stateIsIdentical = function (id, collection, start, end) {\r\n        var state = this.state[id];\r\n        if (!state) {\r\n            return false;\r\n        }\r\n        var isMetaDataIdentical = state.size === collection.length &&\r\n            state.start === start &&\r\n            state.end === end;\r\n        if (!isMetaDataIdentical) {\r\n            return false;\r\n        }\r\n        return state.slice.every(function (element, index) { return element === collection[start + index]; });\r\n    };\r\n    PaginatePipe = __decorate$1([\r\n        Pipe({\r\n            name: 'paginate',\r\n            pure: false\r\n        }),\r\n        __metadata(\"design:paramtypes\", [PaginationService])\r\n    ], PaginatePipe);\r\n    return PaginatePipe;\r\n}());\n\n/**\r\n * The default template and styles for the pagination links are borrowed directly\r\n * from Zurb Foundation 6: http://foundation.zurb.com/sites/docs/pagination.html\r\n */\r\nvar DEFAULT_TEMPLATE = \"\\n    <pagination-template  #p=\\\"paginationApi\\\"\\n                         [id]=\\\"id\\\"\\n                         [maxSize]=\\\"maxSize\\\"\\n                         (pageChange)=\\\"pageChange.emit($event)\\\"\\n                         (pageBoundsCorrection)=\\\"pageBoundsCorrection.emit($event)\\\">\\n    <ul class=\\\"ngx-pagination\\\" \\n        role=\\\"navigation\\\" \\n        [attr.aria-label]=\\\"screenReaderPaginationLabel\\\" \\n        [class.responsive]=\\\"responsive\\\"\\n        *ngIf=\\\"!(autoHide && p.pages.length <= 1)\\\">\\n\\n        <li class=\\\"pagination-previous\\\" [class.disabled]=\\\"p.isFirstPage()\\\" *ngIf=\\\"directionLinks\\\"> \\n            <a tabindex=\\\"0\\\" *ngIf=\\\"1 < p.getCurrent()\\\" (keyup.enter)=\\\"p.previous()\\\" (click)=\\\"p.previous()\\\" [attr.aria-label]=\\\"previousLabel + ' ' + screenReaderPageLabel\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isFirstPage()\\\">\\n                {{ previousLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li> \\n\\n        <li class=\\\"small-screen\\\">\\n            {{ p.getCurrent() }} / {{ p.getLastPage() }}\\n        </li>\\n\\n        <li [class.current]=\\\"p.getCurrent() === page.value\\\" \\n            [class.ellipsis]=\\\"page.label === '...'\\\"\\n            *ngFor=\\\"let page of p.pages\\\">\\n            <a tabindex=\\\"0\\\" (keyup.enter)=\\\"p.setCurrent(page.value)\\\" (click)=\\\"p.setCurrent(page.value)\\\" *ngIf=\\\"p.getCurrent() !== page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span>\\n            </a>\\n            <ng-container *ngIf=\\\"p.getCurrent() === page.value\\\">\\n                <span class=\\\"show-for-sr\\\">{{ screenReaderCurrentLabel }} </span>\\n                <span>{{ (page.label === '...') ? page.label : (page.label | number:'') }}</span> \\n            </ng-container>\\n        </li>\\n\\n        <li class=\\\"pagination-next\\\" [class.disabled]=\\\"p.isLastPage()\\\" *ngIf=\\\"directionLinks\\\">\\n            <a tabindex=\\\"0\\\" *ngIf=\\\"!p.isLastPage()\\\" (keyup.enter)=\\\"p.next()\\\" (click)=\\\"p.next()\\\" [attr.aria-label]=\\\"nextLabel + ' ' + screenReaderPageLabel\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </a>\\n            <span *ngIf=\\\"p.isLastPage()\\\">\\n                 {{ nextLabel }} <span class=\\\"show-for-sr\\\">{{ screenReaderPageLabel }}</span>\\n            </span>\\n        </li>\\n\\n    </ul>\\n    </pagination-template>\\n    \";\r\nvar DEFAULT_STYLES = \"\\n.ngx-pagination {\\n  margin-left: 0;\\n  margin-bottom: 1rem; }\\n  .ngx-pagination::before, .ngx-pagination::after {\\n    content: ' ';\\n    display: table; }\\n  .ngx-pagination::after {\\n    clear: both; }\\n  .ngx-pagination li {\\n    -moz-user-select: none;\\n    -webkit-user-select: none;\\n    -ms-user-select: none;\\n    margin-right: 0.0625rem;\\n    border-radius: 0; }\\n  .ngx-pagination li {\\n    display: inline-block; }\\n  .ngx-pagination a,\\n  .ngx-pagination button {\\n    color: #0a0a0a; \\n    display: block;\\n    padding: 0.1875rem 0.625rem;\\n    border-radius: 0; }\\n    .ngx-pagination a:hover,\\n    .ngx-pagination button:hover {\\n      background: #e6e6e6; }\\n  .ngx-pagination .current {\\n    padding: 0.1875rem 0.625rem;\\n    background: #2199e8;\\n    color: #fefefe;\\n    cursor: default; }\\n  .ngx-pagination .disabled {\\n    padding: 0.1875rem 0.625rem;\\n    color: #cacaca;\\n    cursor: default; } \\n    .ngx-pagination .disabled:hover {\\n      background: transparent; }\\n  .ngx-pagination a, .ngx-pagination button {\\n    cursor: pointer; }\\n\\n.ngx-pagination .pagination-previous a::before,\\n.ngx-pagination .pagination-previous.disabled::before { \\n  content: '\\u00AB';\\n  display: inline-block;\\n  margin-right: 0.5rem; }\\n\\n.ngx-pagination .pagination-next a::after,\\n.ngx-pagination .pagination-next.disabled::after {\\n  content: '\\u00BB';\\n  display: inline-block;\\n  margin-left: 0.5rem; }\\n\\n.ngx-pagination .show-for-sr {\\n  position: absolute !important;\\n  width: 1px;\\n  height: 1px;\\n  overflow: hidden;\\n  clip: rect(0, 0, 0, 0); }\\n.ngx-pagination .small-screen {\\n  display: none; }\\n@media screen and (max-width: 601px) {\\n  .ngx-pagination.responsive .small-screen {\\n    display: inline-block; } \\n  .ngx-pagination.responsive li:not(.small-screen):not(.pagination-previous):not(.pagination-next) {\\n    display: none; }\\n}\\n  \";\n\nvar __decorate$2 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$1 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\nfunction coerceToBoolean(input) {\r\n    return !!input && input !== 'false';\r\n}\r\n/**\r\n * The default pagination controls component. Actually just a default implementation of a custom template.\r\n */\r\nvar PaginationControlsComponent = /** @class */ (function () {\r\n    function PaginationControlsComponent() {\r\n        this.maxSize = 7;\r\n        this.previousLabel = 'Previous';\r\n        this.nextLabel = 'Next';\r\n        this.screenReaderPaginationLabel = 'Pagination';\r\n        this.screenReaderPageLabel = 'page';\r\n        this.screenReaderCurrentLabel = \"You're on page\";\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this._directionLinks = true;\r\n        this._autoHide = false;\r\n        this._responsive = false;\r\n    }\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"directionLinks\", {\r\n        get: function () {\r\n            return this._directionLinks;\r\n        },\r\n        set: function (value) {\r\n            this._directionLinks = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"autoHide\", {\r\n        get: function () {\r\n            return this._autoHide;\r\n        },\r\n        set: function (value) {\r\n            this._autoHide = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(PaginationControlsComponent.prototype, \"responsive\", {\r\n        get: function () {\r\n            return this._responsive;\r\n        },\r\n        set: function (value) {\r\n            this._responsive = coerceToBoolean(value);\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"id\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Number)\r\n    ], PaginationControlsComponent.prototype, \"maxSize\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"directionLinks\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"autoHide\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", Boolean),\r\n        __metadata$1(\"design:paramtypes\", [Boolean])\r\n    ], PaginationControlsComponent.prototype, \"responsive\", null);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"previousLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"nextLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPaginationLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderPageLabel\", void 0);\r\n    __decorate$2([\r\n        Input(),\r\n        __metadata$1(\"design:type\", String)\r\n    ], PaginationControlsComponent.prototype, \"screenReaderCurrentLabel\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageChange\", void 0);\r\n    __decorate$2([\r\n        Output(),\r\n        __metadata$1(\"design:type\", EventEmitter)\r\n    ], PaginationControlsComponent.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsComponent = __decorate$2([\r\n        Component({\r\n            selector: 'pagination-controls',\r\n            template: DEFAULT_TEMPLATE,\r\n            styles: [DEFAULT_STYLES],\r\n            changeDetection: ChangeDetectionStrategy.OnPush,\r\n            encapsulation: ViewEncapsulation.None\r\n        })\r\n    ], PaginationControlsComponent);\r\n    return PaginationControlsComponent;\r\n}());\n\nvar __decorate$3 = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata$2 = (undefined && undefined.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n/**\r\n * This directive is what powers all pagination controls components, including the default one.\r\n * It exposes an API which is hooked up to the PaginationService to keep the PaginatePipe in sync\r\n * with the pagination controls.\r\n */\r\nvar PaginationControlsDirective = /** @class */ (function () {\r\n    function PaginationControlsDirective(service, changeDetectorRef) {\r\n        var _this = this;\r\n        this.service = service;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.maxSize = 7;\r\n        this.pageChange = new EventEmitter();\r\n        this.pageBoundsCorrection = new EventEmitter();\r\n        this.pages = [];\r\n        this.changeSub = this.service.change\r\n            .subscribe(function (id) {\r\n            if (_this.id === id) {\r\n                _this.updatePageLinks();\r\n                _this.changeDetectorRef.markForCheck();\r\n                _this.changeDetectorRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n    PaginationControlsDirective.prototype.ngOnInit = function () {\r\n        if (this.id === undefined) {\r\n            this.id = this.service.defaultId();\r\n        }\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnChanges = function (changes) {\r\n        this.updatePageLinks();\r\n    };\r\n    PaginationControlsDirective.prototype.ngOnDestroy = function () {\r\n        this.changeSub.unsubscribe();\r\n    };\r\n    /**\r\n     * Go to the previous page\r\n     */\r\n    PaginationControlsDirective.prototype.previous = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() - 1);\r\n    };\r\n    /**\r\n     * Go to the next page\r\n     */\r\n    PaginationControlsDirective.prototype.next = function () {\r\n        this.checkValidId();\r\n        this.setCurrent(this.getCurrent() + 1);\r\n    };\r\n    /**\r\n     * Returns true if current page is first page\r\n     */\r\n    PaginationControlsDirective.prototype.isFirstPage = function () {\r\n        return this.getCurrent() === 1;\r\n    };\r\n    /**\r\n     * Returns true if current page is last page\r\n     */\r\n    PaginationControlsDirective.prototype.isLastPage = function () {\r\n        return this.getLastPage() === this.getCurrent();\r\n    };\r\n    /**\r\n     * Set the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.setCurrent = function (page) {\r\n        this.pageChange.emit(page);\r\n    };\r\n    /**\r\n     * Get the current page number.\r\n     */\r\n    PaginationControlsDirective.prototype.getCurrent = function () {\r\n        return this.service.getCurrentPage(this.id);\r\n    };\r\n    /**\r\n     * Returns the last page number\r\n     */\r\n    PaginationControlsDirective.prototype.getLastPage = function () {\r\n        var inst = this.service.getInstance(this.id);\r\n        if (inst.totalItems < 1) {\r\n            // when there are 0 or fewer (an error case) items, there are no \"pages\" as such,\r\n            // but it makes sense to consider a single, empty page as the last page.\r\n            return 1;\r\n        }\r\n        return Math.ceil(inst.totalItems / inst.itemsPerPage);\r\n    };\r\n    PaginationControlsDirective.prototype.getTotalItems = function () {\r\n        return this.service.getInstance(this.id).totalItems;\r\n    };\r\n    PaginationControlsDirective.prototype.checkValidId = function () {\r\n        if (this.service.getInstance(this.id).id == null) {\r\n            console.warn(\"PaginationControlsDirective: the specified id \\\"\" + this.id + \"\\\" does not match any registered PaginationInstance\");\r\n        }\r\n    };\r\n    /**\r\n     * Updates the page links and checks that the current page is valid. Should run whenever the\r\n     * PaginationService.change stream emits a value matching the current ID, or when any of the\r\n     * input values changes.\r\n     */\r\n    PaginationControlsDirective.prototype.updatePageLinks = function () {\r\n        var _this = this;\r\n        var inst = this.service.getInstance(this.id);\r\n        var correctedCurrentPage = this.outOfBoundCorrection(inst);\r\n        if (correctedCurrentPage !== inst.currentPage) {\r\n            setTimeout(function () {\r\n                _this.pageBoundsCorrection.emit(correctedCurrentPage);\r\n                _this.pages = _this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, _this.maxSize);\r\n            });\r\n        }\r\n        else {\r\n            this.pages = this.createPageArray(inst.currentPage, inst.itemsPerPage, inst.totalItems, this.maxSize);\r\n        }\r\n    };\r\n    /**\r\n     * Checks that the instance.currentPage property is within bounds for the current page range.\r\n     * If not, return a correct value for currentPage, or the current value if OK.\r\n     */\r\n    PaginationControlsDirective.prototype.outOfBoundCorrection = function (instance) {\r\n        var totalPages = Math.ceil(instance.totalItems / instance.itemsPerPage);\r\n        if (totalPages < instance.currentPage && 0 < totalPages) {\r\n            return totalPages;\r\n        }\r\n        else if (instance.currentPage < 1) {\r\n            return 1;\r\n        }\r\n        return instance.currentPage;\r\n    };\r\n    /**\r\n     * Returns an array of Page objects to use in the pagination controls.\r\n     */\r\n    PaginationControlsDirective.prototype.createPageArray = function (currentPage, itemsPerPage, totalItems, paginationRange) {\r\n        // paginationRange could be a string if passed from attribute, so cast to number.\r\n        paginationRange = +paginationRange;\r\n        var pages = [];\r\n        var totalPages = Math.ceil(totalItems / itemsPerPage);\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        var isStart = currentPage <= halfWay;\r\n        var isEnd = totalPages - halfWay < currentPage;\r\n        var isMiddle = !isStart && !isEnd;\r\n        var ellipsesNeeded = paginationRange < totalPages;\r\n        var i = 1;\r\n        while (i <= totalPages && i <= paginationRange) {\r\n            var label = void 0;\r\n            var pageNumber = this.calculatePageNumber(i, currentPage, paginationRange, totalPages);\r\n            var openingEllipsesNeeded = (i === 2 && (isMiddle || isEnd));\r\n            var closingEllipsesNeeded = (i === paginationRange - 1 && (isMiddle || isStart));\r\n            if (ellipsesNeeded && (openingEllipsesNeeded || closingEllipsesNeeded)) {\r\n                label = '...';\r\n            }\r\n            else {\r\n                label = pageNumber;\r\n            }\r\n            pages.push({\r\n                label: label,\r\n                value: pageNumber\r\n            });\r\n            i++;\r\n        }\r\n        return pages;\r\n    };\r\n    /**\r\n     * Given the position in the sequence of pagination links [i],\r\n     * figure out what page number corresponds to that position.\r\n     */\r\n    PaginationControlsDirective.prototype.calculatePageNumber = function (i, currentPage, paginationRange, totalPages) {\r\n        var halfWay = Math.ceil(paginationRange / 2);\r\n        if (i === paginationRange) {\r\n            return totalPages;\r\n        }\r\n        else if (i === 1) {\r\n            return i;\r\n        }\r\n        else if (paginationRange < totalPages) {\r\n            if (totalPages - halfWay < currentPage) {\r\n                return totalPages - paginationRange + i;\r\n            }\r\n            else if (halfWay < currentPage) {\r\n                return currentPage - halfWay + i;\r\n            }\r\n            else {\r\n                return i;\r\n            }\r\n        }\r\n        else {\r\n            return i;\r\n        }\r\n    };\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", String)\r\n    ], PaginationControlsDirective.prototype, \"id\", void 0);\r\n    __decorate$3([\r\n        Input(),\r\n        __metadata$2(\"design:type\", Number)\r\n    ], PaginationControlsDirective.prototype, \"maxSize\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageChange\", void 0);\r\n    __decorate$3([\r\n        Output(),\r\n        __metadata$2(\"design:type\", EventEmitter)\r\n    ], PaginationControlsDirective.prototype, \"pageBoundsCorrection\", void 0);\r\n    PaginationControlsDirective = __decorate$3([\r\n        Directive({\r\n            selector: 'pagination-template,[pagination-template]',\r\n            exportAs: 'paginationApi'\r\n        }),\r\n        __metadata$2(\"design:paramtypes\", [PaginationService,\r\n            ChangeDetectorRef])\r\n    ], PaginationControlsDirective);\r\n    return PaginationControlsDirective;\r\n}());\n\nvar __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar NgxPaginationModule = /** @class */ (function () {\r\n    function NgxPaginationModule() {\r\n    }\r\n    NgxPaginationModule = __decorate([\r\n        NgModule({\r\n            imports: [CommonModule],\r\n            declarations: [\r\n                PaginatePipe,\r\n                PaginationControlsComponent,\r\n                PaginationControlsDirective\r\n            ],\r\n            providers: [PaginationService],\r\n            exports: [PaginatePipe, PaginationControlsComponent, PaginationControlsDirective]\r\n        })\r\n    ], NgxPaginationModule);\r\n    return NgxPaginationModule;\r\n}());\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { DEFAULT_STYLES as ɵb, DEFAULT_TEMPLATE as ɵa, NgxPaginationModule, PaginationService, PaginationControlsComponent, PaginationControlsDirective, PaginatePipe };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-pagination/dist/ngx-pagination.js\n// module id = 889\n// module chunks = 0"],"sourceRoot":""}